apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}
  namespace: {{ $.Release.Namespace }}

data:
  config.yaml: |
    # secret = <env secret>
    log-level: info

    provider: oidc

    auth-host: {{ $.Values.authHosts | join "," }}
    cookie-domains: {{ $.Values.hosts | join "," }}
    cookie-name: {{ $.Values.cookie.name }}
    lifetime: {{ $.Values.cookie.lifetime }}
    info-fields:
      {{- $.Values.infoFields | toYaml | nindent 6 }}

    providers:
      oidc:
        scopes: {{ $.Values.oidc.scopes }}
        issuer-url: {{ $.Values.oidc.issuerUrl }}
        client-id: {{ $.Values.oidc.clientID }}
        # client-secret = <env secret>
        prompt: {{ $.Values.oidc.prompt }}

    rules:
      admin:
        action: auth
        route-rule: Header(`X-Forward-Auth-Type`, `admin`)
        auth-rule: In(`name`, `toki`, `osushi`, `pikachu`)
      soft:
        action: soft-auth
        route-rule: Header(`X-Forward-Auth-Type`, `soft`)
      force-login:
        action: login
        route-rule: Header(`X-Forward-Auth-Type`, `soft`) && PathPrefix(`/_oauth/login`)
      force-logout:
        action: logout
        route-rule: Header(`X-Forward-Auth-Type`, `soft`) && PathPrefix(`/_oauth/logout`)
      hard:
        action: auth
        route-rule: Header(`X-Forward-Auth-Type`, `hard`)

    headers:
      {{- range $i, $h := .Values.headers }}
      h-{{ $i }}:
        name: {{ $h.name }}
        source: {{ $h.source }}
      {{- end }}
