apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm

data:
  context: |
    argocdUrl: https://cd.toki317.dev
  subscriptions: |
    - recipients:
        - traq
      selector: pr-preview!=true
      triggers:
        - on-created
        - on-deleted
        - on-deployed
        - on-health-degraded
        - on-sync-failed
        - on-sync-running
        - on-sync-status-unknown
  service.webhook.traq: |
    url: https://q.toki317.dev/api/v3/webhooks/$traq-webhook-id
    headers:
      - name: Content-Type
        value: "text/plain; charset=utf-8"
      - name: X-TRAQ-Channel-Id
        value: a978e6a0-43ab-48b7-9224-70de36c3b183
  template.app-created: |
    webhook:
      traq:
        method: POST
        body: |
          ### :new: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Created :new:
  template.app-deleted: |
    webhook:
      traq:
        method: POST
        body: |
          ### :ayase_null: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Deleted :ayase_null:
  template.app-deployed: |
    webhook:
      traq:
        method: POST
        body: |
          ### :leftparrot: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Deployed :rightparrot:
  template.app-health-degraded: |
    webhook:
      traq:
        method: POST
        body: |
          ### :alert: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Degraded :alert:
          {{range $c := .app.status.conditions}}
          **{{$c.type}}**: {{$c.message}}
          {{end}}
  template.app-sync-failed: |
    webhook:
      traq:
        method: POST
        body: |
          ### :exclamation: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Sync Failed :exclamation:
          {{range $c := .app.status.conditions}}
          **{{$c.type}}**: {{$c.message}}
          {{end}}
  template.app-sync-running: |
    webhook:
      traq:
        method: POST
        body: |
          ### :spinner: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Syncing :spinner:
  template.app-sync-status-unknown: |
    webhook:
      traq:
        method: POST
        body: |
          ### :question: [{{.app.metadata.name}}]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) Sync Status Unknown :question:
          {{range $c := .app.status.conditions}}
          **{{$c.type}}**: {{$c.message}}
          {{end}}

  # default triggers from: https://github.com/argoproj/argo-cd/blob/master/notifications_catalog/install.yaml
  trigger.on-created: |
    - description: Application is created.
      oncePer: app.metadata.name
      send:
      - app-created
      when: "true"
  trigger.on-deleted: |
    - description: Application is deleted.
      oncePer: app.metadata.name
      send:
      - app-deleted
      when: app.metadata.deletionTimestamp != nil
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState.syncResult.revision
      send:
      - app-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-preview-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.metadata.annotations.pr-preview-head-sha
      send:
      - app-preview-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - app-health-degraded
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - app-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - app-sync-running
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - app-sync-status-unknown
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - app-sync-succeeded
      when: app.status.operationState.phase in ['Succeeded']
