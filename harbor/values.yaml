# https://github.com/goharbor/harbor-helm/blob/main/values.yaml

expose:
  type: clusterIP
  tls:
    enabled: false
  clusterIP:
    name: harbor
    annotations: {}
    ports:
      httpPort: 80
      httpsPort: 443

externalURL: https://registry.toki317.dev

internalTLS:
  enabled: false

ipFamily:
  ipv6:
    enabled: true
  ipv4:
    enabled: true

persistence:
  enabled: true
  resourcePolicy: "keep"
  imageChartStorage:
    type: s3
    s3:
      # Set an existing secret for S3 accesskey and secretkey
      # keys in the secret should be REGISTRY_STORAGE_S3_ACCESSKEY and REGISTRY_STORAGE_S3_SECRETKEY for registry
      existingSecret: "storage"
      region: ap-osaka-1
      bucket: harbor
      regionendpoint: https://axekqehyne6j.compat.objectstorage.ap-osaka-1.oraclecloud.com

imagePullPolicy: Always

# The update strategy for deployments with persistent volumes(jobservice, registry): "RollingUpdate" or "Recreate"
# Set it as "Recreate" when "RWM" for volumes isn't supported
updateStrategy:
  type: RollingUpdate

# debug, info, warning, error or fatal
logLevel: info

existingSecretAdminPassword: "password"
existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD

existingSecretSecretKey: "secret-key"

# Run the migration job via helm hook
enableMigrateHelmHook: false

# If service exposed via "ingress", the Nginx will not be used
nginx:
  image:
    repository: ghcr.io/octohelm/harbor/nginx-photon
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/nginx-photon
    tag: "v2.9.0"
  revisionHistoryLimit: 0

portal:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-portal
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-portal
    tag: "v2.9.0"
  revisionHistoryLimit: 0

core:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-core
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-core
    tag: "v2.9.0"
  # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
  secret: "gYdR4OeI60tmNah4"
  # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
  xsrfKey: "HFk3mAvqdxVFeaMgTwCc5E3GmSoPDydK"
  # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
  # core-cert generated with the following helm function: genCA "harbor-token-ca" 36500
  secretName: core-cert
  revisionHistoryLimit: 0

jobservice:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-jobservice
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-jobservice
    tag: "v2.9.0"
  # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
  secret: "ZWm61Lg3hjhbQZF0"
  jobLoggers:
    - stdout
  revisionHistoryLimit: 0

registry:
  registry:
    image:
      repository: ghcr.io/octohelm/harbor/registry-photon
      # renovate:image-tag imageName=ghcr.io/octohelm/harbor/registry-photon
      tag: "v2.9.0"
  controller:
    image:
      repository: ghcr.io/octohelm/harbor/harbor-registryctl
      # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-registryctl
      tag: "v2.9.0"
  # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
  secret: "K2En0kIK4bCrOmBq"
  revisionHistoryLimit: 0
  credentials:
    username: "registry"
    password: "password"
    # Login and password in htpasswd string format. Excludes `registry.credentials.username`  and `registry.credentials.password`. May come in handy when integrating with tools like argocd or flux. This allows the same line to be generated each time the template is rendered, instead of the `htpasswd` function from helm, which generates different lines each time because of the salt.
    # NOTE: explicit supply, see: https://github.com/goharbor/harbor-helm/issues/1102
    # NOTE: has to match with above username/password, see: https://github.com/goharbor/harbor-helm/issues/1210
    htpasswdString: "registry:$2a$10$NV62pUwuH2BQjr9PGGum6uTLlvUTV1fGVSkPQuDRwloYZKA.UsQAu"

trivy:
  enabled: true
  image:
    repository: ghcr.io/octohelm/harbor/trivy-adapter-photon
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/trivy-adapter-photon
    tag: "v2.9.0"

database:
  type: internal
  internal:
    image:
      repository: ghcr.io/octohelm/harbor/harbor-db
      # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-db
      tag: "v2.9.0"
    password: "password"
    shmSizeLimit: 128Mi
    livenessProbe:
      timeoutSeconds: 5
    readinessProbe:
      timeoutSeconds: 5

redis:
  type: internal
  internal:
    image:
      repository: ghcr.io/octohelm/harbor/redis-photon
      # renovate:image-tag imageName=ghcr.io/octohelm/harbor/redis-photon
      tag: "v2.9.0"

exporter:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-exporter
    # renovate:image-tag imageName=ghcr.io/octohelm/harbor/harbor-exporter
    tag: "v2.9.1"
  revisionHistoryLimit: 0

metrics:
  enabled: false

trace:
  enabled: false
