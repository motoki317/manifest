# https://github.com/goharbor/harbor-helm/blob/main/values.yaml

expose:
  type: clusterIP
  tls:
    enabled: false
  clusterIP:
    name: harbor
    annotations: {}
    ports:
      httpPort: 80
      httpsPort: 443

externalURL: https://registry.toki317.dev

internalTLS:
  enabled: false

ipFamily:
  ipv6:
    enabled: true
  ipv4:
    enabled: true

persistence:
  enabled: true
  resourcePolicy: "keep"
  imageChartStorage:
    type: s3
    s3:
      # Set an existing secret for S3 accesskey and secretkey
      # keys in the secret should be REGISTRY_STORAGE_S3_ACCESSKEY and REGISTRY_STORAGE_S3_SECRETKEY for registry
      existingSecret: "storage"
      region: ap-osaka-1
      bucket: harbor
      regionendpoint: https://axekqehyne6j.compat.objectstorage.ap-osaka-1.oraclecloud.com

imagePullPolicy: Always

# The update strategy for deployments with persistent volumes(jobservice, registry): "RollingUpdate" or "Recreate"
# Set it as "Recreate" when "RWM" for volumes isn't supported
updateStrategy:
  type: RollingUpdate

# debug, info, warning, error or fatal
logLevel: info

existingSecretAdminPassword: "password"
existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD

existingSecretSecretKey: "secret-key"
secretKey: HARBOR_SECRET_KEY

# Run the migration job via helm hook
enableMigrateHelmHook: true

# If service exposed via "ingress", the Nginx will not be used
nginx:
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

portal:
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

core:
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

jobservice:
  jobLoggers:
    - stdout
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

registry:
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute
  credentials:
    username: "registry"
    # If using existingSecret, the key must be REGISTRY_PASSWD and REGISTRY_HTPASSWD
    existingSecret: "password"

trivy:
  enabled: true
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

database:
  type: internal
  internal:
    password: "password"
    shmSizeLimit: 128Mi
    livenessProbe:
      timeoutSeconds: 5
    readinessProbe:
      timeoutSeconds: 5
    nodeSelector:
      kubernetes.io/arch: amd64
    tolerations:
      - key: toki317.dev/role
        operator: Equal
        value: amd64-burstable
        effect: NoExecute

redis:
  type: internal
  internal:
    nodeSelector:
      kubernetes.io/arch: amd64
    tolerations:
      - key: toki317.dev/role
        operator: Equal
        value: amd64-burstable
        effect: NoExecute

exporter:
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
    - key: toki317.dev/role
      operator: Equal
      value: amd64-burstable
      effect: NoExecute

metrics:
  enabled: false

trace:
  enabled: false
